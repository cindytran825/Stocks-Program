
- write tests for the controller / view. Finish that and make sure that it does work (below are missed test cases on the self-eval)
   - DONE need a test that checks what happens when an invalid ticker is entered
   - DONE need a test that checks what happens when an invalid date is entered
- Double check all documentation as well as the README files.
- implement purchase: entered a specific share and a specific stock to be bought on a specific date (question for piazza, do we use closing price or open) 
and add them to the portfolio
- implement selling: Sell a specific number of shares of a specific stock on a specified date from a given portfolio

===== IMPLEMENT A TRANSACTION LOG SYSTEM FOR THESE NEXT FEW STEPS =====

- Determine the composition of a portfolio at a specific date.
 Note that the composition may change over time. The composition must include (a) the list of
stocks and (b) the number of shares of each stock (display value of EACH stock of a portfolio)

- Determine the value of a portfolio on a specific date (to be exact, the end of that day).
The value for a portfolio before the date of its first purchase would be 0, since
each stock in the portfolio now was purchased at a specific point in time.

- The distribution of value of a portfolio on a specific date (to be exact, the end of that day).
The distribution of value should include (a) the stock itself (b) the value of each
individual stock in the portfolio. The sum of the values in (b) should equal to the value
of that portfolio on that date.

- balance a portfolio with the given weights and a date
    - prompt the user to enter a percentage for each stock on file (while loop)
    then also show remaining distribution percentage to ensure it doesn't go over 100% and adds
    up to 100%

- implement a bar chart given a specific stock and time period, example format below
====================================================
Performance of portfolio XXX from YYY to ZZZ

Jan 2010: *****
Feb 2010: ***
Mar 2010: ********
Apr 2010: ******
May 2010: *******
Jun 2010: ********
Aug 2010: *********
Sep 2010: ***********
Oct 2010: ************
Nov 2010: **********
Dec 2010: **************

Scale: * = 1000
====================================================
- RESTRICTION FOR BAR CHART
The number of lines is decided by the timespan desired. The scale of the timestamps
(i.e. each month of a year, every 3 months, every day, etc.) is decided by the timespan,
so that bar chart has at least 5 lines but no more than 30 lines. The starting and ending
dates of the timespan must be part of the chart. The chart's minimum resolution is "day"
(i.e. you do not have to chart the intra-day prices of stocks/portfolio). This restriction
may be lifted if the time window specified is less than 5 days.

The number of asterisks on each line is a measure of the value of the portfolio at that timestamp.
If the timestamps are dates then the value is computed at the end of that day. If the timestamps
are months then the value is computed at the last working day of that month. If the timestamp are
years then the value is computed on the last working day of that year.

The end of the bar chart shows the scale in terms of how many dollars are represented by each
asterisk. The scale of the horizontal axis is decided by the range of values of the portfolios,
so that there are no more than 50 asterisks on each line.

The scale may be absolute (one asterisk is equal to 1000) or relative to a base amount (one
asterisk is 2000morethanbaseamountof 100000). This will allow you to plot the bar chart over
small or large ranges of portfolio values. The last line of the barchart should clearly mention
which type of scale it is.

Your program must support drawing (as text on the screen) a bar chart according to the above
specifications, for a specific portfolio and a specified time range.

- make sure to still follow SOLID. Any design changes must be documented and justified in the design-
readme file
========= OFFICE HOURS QUESTIONS ===========
- "We expect your design to follow the MVC architecture. Adding feature logic code in the view
will cost you points! A good implementation of MVC allows us to substitute one part with
minimal changes to the others.": WHAT DOES THIS MEAN? IT'S OKAY FOR US TO ADD NEW METHODS TO THE VIEW
TO PRINT NEW LINES, RIGHT? IS IT SAYING WE NEED TO MAKE A NEW VIEW THAT EXTENDS IT


